{"ast":null,"code":"var _jsxFileName = \"D:\\\\Multiplex2\\\\Multiplex\\\\Book_My_Show_f\\\\Book_My_Show_f\\\\src\\\\components\\\\Movies.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Movies() {\n  _s();\n  const [data, setData] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Use an immediately-invoked async function to fetch data since useEffect can't be async.\n    (async () => {\n      try {\n        const response = await axios.get('https://api.themoviedb.org/3/discover/movie?api_key=c63b3966683c21ab83b395dcfa6b7a9c');\n        console.log(response.data);\n        setData(response.data.results); // Assuming you want to use the 'results' array from the response.\n      } catch (error) {\n        console.error(error);\n      }\n    })();\n  }, []); // Pass an empty dependency array to run this effect only once.\n\n  const navigateToBooking = movieTitle => {\n    navigate(`/booking/${encodeURIComponent(movieTitle)}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      style: {\n        padding: '5%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        style: {\n          textAlign: 'center'\n        },\n        children: data.map(mov => /*#__PURE__*/_jsxDEV(Col, {\n          id: mov.id,\n          xs: 6,\n          md: 4,\n          lg: 3,\n          style: {\n            marginBottom: '7%'\n          },\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            as: \"a\",\n            style: {\n              cursor: 'pointer'\n            },\n            onClick: () => navigateToBooking(mov.title),\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: `https://image.tmdb.or/t/p/w500/${mov.poster_path}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: mov.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this)\n        }, mov.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n}\n_s(Movies, \"i7nVqMFlFJ2bYMKYLE+DofQRYas=\", false, function () {\n  return [useNavigate];\n});\n_c = Movies;\nexport default Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Card","axios","useNavigate","Movies","data","setData","navigate","response","get","console","log","results","error","navigateToBooking","movieTitle","encodeURIComponent","padding","textAlign","map","mov","id","marginBottom","cursor","title","poster_path"],"sources":["D:/Multiplex2/Multiplex/Book_My_Show_f/Book_My_Show_f/src/components/Movies.js"],"sourcesContent":[" import React, { useState, useEffect } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport axios from 'axios';\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\nfunction Movies() {\r\n  const [data, setData] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Use an immediately-invoked async function to fetch data since useEffect can't be async.\r\n    (async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          'https://api.themoviedb.org/3/discover/movie?api_key=c63b3966683c21ab83b395dcfa6b7a9c'\r\n        );\r\n        console.log(response.data);\r\n        setData(response.data.results); // Assuming you want to use the 'results' array from the response.\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    })();\r\n  }, []); // Pass an empty dependency array to run this effect only once.\r\n\r\n  const navigateToBooking = (movieTitle) => {\r\n    navigate(`/booking/${encodeURIComponent(movieTitle)}`)\r\n  }\r\n\r\n    return (\r\n      <div>\r\n        <Container fluid style={{ padding: '5%' }}>\r\n          <Row style={{ textAlign: 'center' }}>\r\n            {data.map((mov) => (\r\n              <Col id={mov.id} key={mov.id} xs={6} md={4} lg={3} style={{ marginBottom: '7%' }}>\r\n                <Card as=\"a\" style={{ cursor: 'pointer' }} onClick={() => navigateToBooking(mov.title)} >\r\n                  <Card.Img variant=\"top\" src={`https://image.tmdb.or/t/p/w500/${mov.poster_path}`} /> {/* Use the correct property for the image URL */}\r\n                  <Card.Body>\r\n                    <Card.Text>\r\n                      <b>{mov.title}</b>\r\n                    </Card.Text> \r\n                  </Card.Body>\r\n\r\n                </Card> \r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default Movies;\r\n"],"mappings":";;AAAC,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACnD,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,WAAW,QAAO,kBAAkB;AAAC;AAE7C,SAASC,MAAM,GAAG;EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMW,QAAQ,GAAGJ,WAAW,EAAE;EAE9BN,SAAS,CAAC,MAAM;IACd;IACA,CAAC,YAAY;MACX,IAAI;QACF,MAAMW,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAC9B,sFAAsF,CACvF;QACDC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACH,IAAI,CAAC;QAC1BC,OAAO,CAACE,QAAQ,CAACH,IAAI,CAACO,OAAO,CAAC,CAAC,CAAC;MAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC,GAAG;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMC,iBAAiB,GAAIC,UAAU,IAAK;IACxCR,QAAQ,CAAE,YAAWS,kBAAkB,CAACD,UAAU,CAAE,EAAC,CAAC;EACxD,CAAC;EAEC,oBACE;IAAA,uBACE,QAAC,SAAS;MAAC,KAAK;MAAC,KAAK,EAAE;QAAEE,OAAO,EAAE;MAAK,CAAE;MAAA,uBACxC,QAAC,GAAG;QAAC,KAAK,EAAE;UAAEC,SAAS,EAAE;QAAS,CAAE;QAAA,UACjCb,IAAI,CAACc,GAAG,CAAEC,GAAG,iBACZ,QAAC,GAAG;UAAC,EAAE,EAAEA,GAAG,CAACC,EAAG;UAAc,EAAE,EAAE,CAAE;UAAC,EAAE,EAAE,CAAE;UAAC,EAAE,EAAE,CAAE;UAAC,KAAK,EAAE;YAAEC,YAAY,EAAE;UAAK,CAAE;UAAA,uBAC/E,QAAC,IAAI;YAAC,EAAE,EAAC,GAAG;YAAC,KAAK,EAAE;cAAEC,MAAM,EAAE;YAAU,CAAE;YAAC,OAAO,EAAE,MAAMT,iBAAiB,CAACM,GAAG,CAACI,KAAK,CAAE;YAAA,wBACrF,QAAC,IAAI,CAAC,GAAG;cAAC,OAAO,EAAC,KAAK;cAAC,GAAG,EAAG,kCAAiCJ,GAAG,CAACK,WAAY;YAAE;cAAA;cAAA;cAAA;YAAA,QAAG,oBACpF,QAAC,IAAI,CAAC,IAAI;cAAA,uBACR,QAAC,IAAI,CAAC,IAAI;gBAAA,uBACR;kBAAA,UAAIL,GAAG,CAACI;gBAAK;kBAAA;kBAAA;kBAAA;gBAAA;cAAK;gBAAA;gBAAA;gBAAA;cAAA;YACR;cAAA;cAAA;cAAA;YAAA,QACF;UAAA;YAAA;YAAA;YAAA;UAAA;QAEP,GATaJ,GAAG,CAACC,EAAE;UAAA;UAAA;UAAA;QAAA,QAW7B;MAAC;QAAA;QAAA;QAAA;MAAA;IACE;MAAA;MAAA;MAAA;IAAA;EACI;IAAA;IAAA;IAAA;EAAA,QACR;AAIZ;AAAC,GA9CQjB,MAAM;EAAA,QAEID,WAAW;AAAA;AAAA,KAFrBC,MAAM;AAgDf,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}